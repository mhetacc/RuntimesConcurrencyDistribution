
@article{paxos,
author = {Lamport, Leslie},
title = {The part-time parliament},
year = {1998},
issue_date = {May 1998},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {16},
number = {2},
issn = {0734-2071},
url = {https://doi.org/10.1145/279227.279229},
doi = {10.1145/279227.279229},
abstract = {Recent archaeological discoveries on the island of Paxos reveal that the parliament functioned despite the peripatetic propensity of its part-time legislators. The legislators maintained consistent copies of the parliamentary record, despite their frequent forays from the chamber and the forgetfulness of their messengers. The Paxon parliament's protocol provides a new way of implementing the state machine approach to the design of distributed systems.},
journal = {ACM Trans. Comput. Syst.},
month = may,
pages = {133–169},
numpages = {37},
keywords = {state machines, three-phase commit, voting}
},

@article{tianetal,
author = {Tian, Siben and Bai, Fenhua and Shen, Tao and Zhang, Chi and Gong, Bei},
title = {VSSB-Raft: A Secure and Efficient Zero Trust Consensus Algorithm\&nbsp;for Blockchain},
year = {2024},
issue_date = {March 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {20},
number = {2},
issn = {1550-4859},
url = {https://doi.org/10.1145/3611308},
doi = {10.1145/3611308},
abstract = {To solve the problems of vote forgery and malicious election of candidate nodes in the Raft consensus algorithm, we combine zero trust with the Raft consensus algorithm and propose a secure and efficient consensus algorithm -Verifiable Secret Sharing Byzantine Fault Tolerance Raft Consensus Algorithm&nbsp;(VSSB-Raft). The VSSB-Raft consensus algorithm realizes zero trust through the supervisor node and secret sharing algorithm without the invisible trust between nodes required by the algorithm. Meanwhile, the VSSB-Raft consensus algorithm uses the SM2 signature algorithm to realize the characteristics of zero trust requiring authentication before data use. In addition, by introducing the NDN network, we redesign the communication between nodes and guarantee the communication quality among nodes. The VSSB-Raft consensus algorithm proposed in this paper can make the algorithm Byzantine fault tolerant by setting a threshold for secret sharing while maintaining the algorithm’s complexity to be O(n). Experiments show that the VSSB-Raft consensus algorithm is secure and efficient with high throughput and low consensus latency.},
journal = {ACM Trans. Sen. Netw.},
month = jan,
articleno = {34},
numpages = {22},
keywords = {Blockchain, zero trust, Byzantine fault tolerance, consensus algorithm, secret sharing}
},

@article{flp,
author = {Fischer, Michael J. and Lynch, Nancy A. and Paterson, Michael S.},
title = {Impossibility of distributed consensus with one faulty process},
year = {1985},
issue_date = {April 1985},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {32},
number = {2},
issn = {0004-5411},
url = {https://doi.org/10.1145/3149.214121},
doi = {10.1145/3149.214121},
abstract = {The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processes to agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.},
journal = {J. ACM},
month = apr,
pages = {374–382},
numpages = {9}
},

@article{lamportMultiprocessor,
  author={Lamport},
  journal={IEEE Transactions on Computers}, 
  title={How to Make a Multiprocessor Computer That Correctly Executes Multiprocess Programs}, 
  year={1979},
  volume={C-28},
  number={9},
  pages={690-691},
  keywords={Memory modules;Computers;Protocols;Memory management;Freeports;Logic;Array signal processing;Welding;Semiconductor memory;Programmable logic arrays;Computer design;concurrent computing;hardware correctness;multiprocessing;parallel processing},
  doi={10.1109/TC.1979.1675439}
},


@inproceedings{raft,
author = {Ongaro, Diego and Ousterhout, John},
title = {In search of an understandable consensus algorithm},
year = {2014},
isbn = {9781931971102},
publisher = {USENIX Association},
address = {USA},
abstract = {Raft is a consensus algorithm for managing a replicated log. It produces a result equivalent to (multi-)Paxos, and it is as efficient as Paxos, but its structure is different from Paxos; this makes Raft more understandable than Paxos and also provides a better foundation for building practical systems. In order to enhance understandability, Raft separates the key elements of consensus, such as leader election, log replication, and safety, and it enforces a stronger degree of coherency to reduce the number of states that must be considered. Results from a user study demonstrate that Raft is easier for students to learn than Paxos. Raft also includes a new mechanism for changing the cluster membership, which uses overlapping majorities to guarantee safety.},
booktitle = {Proceedings of the 2014 USENIX Conference on USENIX Annual Technical Conference},
pages = {305–320},
numpages = {16},
location = {Philadelphia, PA},
series = {USENIX ATC'14}
},

@inproceedings{liuXie,
author = {Xie, Ting and Liu, Xiaofeng},
title = {A Raft Algorithm with Byzantine Fault-Tolerant Performance},
year = {2022},
isbn = {9781450396837},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3561877.3561892},
doi = {10.1145/3561877.3561892},
abstract = {In view of the disadvantage that Raft algorithm does not have byzantine fault tolerance, this paper improves Raft algorithm and proposes a Raft algorithm with Byzantine fault tolerance – NRaft algorithm. First, NRaft algorithm uses the Shamir threshold secret sharing algorithm to solve the log tampering and information quantity fraud in Byzantine nodes; second, RSA encryption algorithm is used to further ensure the integrity of logs. Finally, the experimental data show that NRaft algorithm outperforms PBFT algorithm as the number of nodes increases. Therefore, the NRaft algorithm is not only suitable for environmentally secure private blockchain, but also for consortium blockchain where Byzantine nodes exist.},
booktitle = {Proceedings of the 5th International Conference on Information Science and Systems},
pages = {95–99},
numpages = {5},
keywords = {threshold encryption, Consensus mechanism, Blockchain},
location = {Beijing, China},
series = {ICISS '22}
},

@book{tanenbaum2017distributed,
  title={Distributed Systems},
  author={Tanenbaum, A.S. and van Steen, M.},
  isbn={9781543057386},
  url={https://books.google.it/books?id=c77GAQAACAAJ},
  year={2017},
  publisher={CreateSpace Independent Publishing Platform}
},


@book{george_coulouris_distributed_2012,
	edition = {5},
	title = {Distributed {Systems}: {Concepts} and {Design}},
	isbn = {978-0-13-214301-1},
	language = {en},
	publisher = {Addison-Wesley},
	author = {{George Coulouris} and {Jean Dollimore} and {Tim Kindberg} and {Gordon Blair}},
	year = {2012},
	keywords = {\#broken, Jab/\#Pre},
},

@book{parallelComputing,
author = {Quinn, Michael J.},
title = {Parallel computing (2nd ed.): theory and practice},
year = {1994},
isbn = {0070512949},
publisher = {McGraw-Hill, Inc.},
address = {USA}
},

@book{parallelDistributedHandbook,
author = {Zomaya, Albert Y. H.},
title = {Parallel and distributed computing handbook},
year = {1996},
isbn = {0070730202},
publisher = {McGraw-Hill, Inc.},
address = {USA}
},

@book{rollings2003andrew,
  title={Andrew Rollings and Ernest Adams on Game Design},
  author={Rollings, A. and Adams, E.},
  isbn={9781592730018},
  lccn={2002110543},
  series={NRG Series},
  url={https://books.google.it/books?id=Qc19ChiOUI4C},
  year={2003},
  publisher={New Riders}
},

@book{computerOrganization,
author = {Patterson, David A. and Hennessy, John L.},
title = {Computer Organization and Design, Fourth Edition, Fourth Edition: The Hardware/Software Interface (The Morgan Kaufmann Series in Computer Architecture and Design)},
year = {2008},
isbn = {0123744938},
publisher = {Morgan Kaufmann Publishers Inc.},
address = {San Francisco, CA, USA},
edition = {4th},
abstract = {The classic textbook for computer systems analysis and design, Computer Organization and Design, has been thoroughly updated to provide a new focus on the revolutionary change taking place in industry today: the switch from uniprocessor to multicore microprocessors. This new emphasis on parallelism is supported by updates reflecting the newest technologies with examples highlighting the latest processor designs, benchmarking standards, languages and tools. As with previous editions, a MIPS processor is the core used to present the fundamentals of hardware technologies, assembly language, computer arithmetic, pipelining, memory hierarchies and I/O. Along with its increased coverage of parallelism, this new edition offers new content on Flash memory and virtual machines as well as a new and important appendix written by industry experts covering the emergence and importance of the modern GPU (graphics processing unit), the highly parallel, highly multithreaded multiprocessor optimized for visual computing.A new exercise paradigm allows instructors to reconfigure the 600 exercises included in the book to easily generate new exercises and solutions of their own. A CD provides a toolkit of simulators and compilers along with tutorials for using them as well as additional problems and solutions, and references.}
},

@book{OSconcepts,
author = {Silberschatz, Abraham and Galvin, Peter Baer and Gagne, Greg},
title = {Operating System Concepts},
year = {2008},
isbn = {0470128720},
publisher = {Wiley Publishing},
edition = {8th},
abstract = {Keep pace with the fast-developing world of operating systems Open-source operating systems, virtual machines, and clustered computing are among the leading fields of operating systems and networking that are rapidly changing. With substantial revisions and organizational changes, Silberschatz, Galvin, and Gagnes Operating System Concepts, Eighth Edition remains as current and relevant as ever, helping you master the fundamental concepts of operating systems while preparing yourself for todays emerging developments. As in the past, the text brings you up to speed on core knowledge and skills, including: What operating systems are, what they do, and how they are designed and constructed Process, memory, and storage management Protection and security Distributed systems Special-purpose systems Beyond the basics, the Eight Edition sports substantive revisions and organizational changes that clue you in to such cutting-edge developments as open-source operating systems, multi-core processors, clustered computers, virtual machines, transactional memory, NUMA, Solaris 10 memory management, Suns ZFS file system, and more. New to this edition is the use of a simulator to dynamically demonstrate several operating system topics. Best of all, a greatly enhanced WileyPlus, a multitude of new problems and programming exercises, and other enhancements to this edition all work together to prepare you enter the world of operating systems with confidence.}
},

@Inbook{Apt2009,
title="Distributed Programs",
bookTitle="Verification of Sequential and Concurrent Programs",
year="2009",
publisher="Springer London",
address="London",
pages="373--406",
abstract="Many Real Systems consist of a number of physically distributed components that work independently using their private storage, but also communicate from time to time by explicit message passing. Such systems are called distributed systems. Distributed programs are abstract descriptions of distributed systems. A distributed program consists of a collection of processes that work concurrently and communicate by explicit message passing. Each process can access a set of variables which are disjoint from the variables that can be changed by any other process.",
isbn="978-1-84882-745-5",
doi="10.1007/978-1-84882-745-5_11",
url="https://doi.org/10.1007/978-1-84882-745-5_11"
},


@misc{newzoo,
  author    = {Michiel Buijsman and Devan Brennan and Tianyi Gu and Lester Isaac Simon and Tomofumi Kuzuhara and Spyros Georgiou and Michael Wagner and Ngoc Linh Nguyen and Brett Hunt and Alejandro Marin Vidal and Tiago Reis},
  title     = {Newzoo's Global Games Market Report 2024},
  publisher = {Newzoo International B.V.},
  year      = {2024},
  url       = {https://newzoo.com/resources/trend-reports/newzoos-global-games-market-report-2024-free-version}
}

@misc{pwc,
  author    = {PWC},
  title     = {Global entertainment and media industry revenues to hit US\$3.5 trillion by 2029, driven by advertising, live events, and video games: PwC Global Entertainment \& Media Outlook},
  publisher = {PwC},
  year      = {2025},
  url       = {https://www.pwc.com/gx/en/news-room/press-releases/2025/pwc-global-entertainment-media-outlook.html}
},

@misc{f2prevenue,
  author    = {Jessica Clement},
  title     = {Free-to-play (F2P) games market revenue worldwide from 2018 to 2024 },
  publisher = {Statista},
  year      = {2025},
  url       = {https://www.statista.com/statistics/324129/arpu-f2p-mmo/}
},

@misc{casualgames,
  author    = {Rida Khan and Zack Aboulazm},
  title     = {\$300 Billion of Video Gaming Revenue, by Segment (2017-2026)},
  publisher = {Visual Capitalist},
  year      = {2023},
  url       = {https://www.visualcapitalist.com/sp/video-games-industry-revenue-growth-visual-capitalist/}
},

@misc{tiobe,
  author    = {Paul Jansen},
  title     = {TIOBE Index for August 2025},
  publisher = {TIOBE},
  year      = {2025},
  url       = {https://www.tiobe.com/tiobe-index/}
},

@misc{ieeeSpect,
  author    = {Stephen Crass},
  title     = {The Top Programming Languages 2024},
  publisher = {IEEE Spectrum},
  year      = {2024},
  url       = {https://spectrum.ieee.org/deep-brain-stimulation-depression}
},

@misc{wiredCheat,
  author    = {Matt Besturgess},
  title     = {Inside the Multimillion-Dollar Gray Market for Video Game Cheats},
  publisher = {WIRED},
  year      = {2025},
  url       = {https://www.wired.com/story/inside-the-multimillion-dollar-grey-market-for-video-game-cheats/}
},